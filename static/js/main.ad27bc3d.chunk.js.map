{"version":3,"sources":["components/TodoForm.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","addTodo","useState","text","setText","action","onSubmit","e","preventDefault","trim","type","placeholder","value","onChange","target","TodoList","todos","deleteTodo","completeTodo","map","todo","i","className","isComplete","todotext","onClick","App","setTodos","newTodo","unshift","localStorage","setItem","JSON","stringify","index","splice","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sLAuBeA,EArBE,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAClB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KAQA,OACE,sBAAMC,OAAO,GAAGC,SARI,SAACC,GACrBA,EAAEC,iBACkB,KAAhBL,EAAKM,SACPR,EAAQE,GACRC,EAAQ,MAIV,SACE,uBACEM,KAAK,OACLC,YAAY,eACZC,MAAOT,EACPU,SAAU,SAACN,GAAD,OAAOH,EAAQG,EAAEO,OAAOF,aCF3BG,EAbE,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,MAAOC,EAA+B,EAA/BA,WAAYC,EAAmB,EAAnBA,aACrC,OACE,6BACGF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACT,qBAAYC,UAAWF,EAAKG,WAAa,gBAAkB,KAA3D,UACGH,EAAKI,SADR,IACkB,mBAAGC,QAAS,kBAAMP,EAAaG,IAA/B,sBAChB,mBAAGI,QAAS,kBAAMR,EAAWI,IAA7B,oBAFOA,SC8BFK,EA/BH,WACV,MAA0BxB,mBAAS,IAAnC,mBAAOc,EAAP,KAAcW,EAAd,KAiBA,OACE,sBAAKL,UAAU,eAAf,UACE,2CACA,cAAC,EAAD,CAAUrB,QAnBE,SAACuB,GACf,IAAMI,EAAO,YAAOZ,GACpBY,EAAQC,QAAQ,CAAEL,WAAUD,YAAY,IACxCI,EAASC,GACTE,aAAaC,QAAQ,QAASC,KAAKC,UAAUL,OAgB3C,cAAC,EAAD,CACEZ,MAAOA,EACPC,WAhBa,SAACiB,GAClB,IAAMN,EAAO,YAAOZ,GACpBY,EAAQO,OAAOD,EAAO,GACtBP,EAASC,IAcLV,aAZe,SAACgB,GACpB,IAAMN,EAAO,YAAOZ,GACpBY,EAAQM,GAAOX,YAAcK,EAAQM,GAAOX,WAC5CI,EAASC,UChBbQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.ad27bc3d.chunk.js","sourcesContent":["import { React, useState } from \"react\";\n\nconst TodoForm = ({ addTodo }) => {\n  const [text, setText] = useState(\"\");\n  const submitHandler = (e) => {\n    e.preventDefault();\n    if (text.trim() !== \"\") {\n      addTodo(text);\n      setText(\"\");\n    }\n  };\n  return (\n    <form action=\"\" onSubmit={submitHandler}>\n      <input\n        type=\"text\"\n        placeholder=\"Write a task\"\n        value={text}\n        onChange={(e) => setText(e.target.value)}\n      />\n    </form>\n  );\n};\n\nexport default TodoForm;\n","import React from \"react\";\n\nconst TodoList = ({ todos, deleteTodo, completeTodo }) => {\n  return (\n    <ul>\n      {todos.map((todo, i) => (\n        <li key={i} className={todo.isComplete ? \"todo-complete\" : null}>\n          {todo.todotext} <i onClick={() => completeTodo(i)}> &#10004; </i>\n          <i onClick={() => deleteTodo(i)}>&times;</i>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default TodoList;\n","import \"./App.css\";\nimport { React, useState } from \"react\";\nimport TodoForm from \"./components/TodoForm\";\nimport TodoList from \"./components/TodoList\";\n\nconst App = () => {\n  const [todos, setTodos] = useState([]);\n  const addTodo = (todotext) => {\n    const newTodo = [...todos];\n    newTodo.unshift({ todotext, isComplete: false });\n    setTodos(newTodo);\n    localStorage.setItem(\"todos\", JSON.stringify(newTodo));\n  };\n  const deleteTodo = (index) => {\n    const newTodo = [...todos];\n    newTodo.splice(index, 1);\n    setTodos(newTodo);\n  };\n  const completeTodo = (index) => {\n    const newTodo = [...todos];\n    newTodo[index].isComplete = !newTodo[index].isComplete;\n    setTodos(newTodo);\n  };\n  return (\n    <div className=\"todo-wrapper\">\n      <h1>ToDo List</h1>\n      <TodoForm addTodo={addTodo} />\n      <TodoList\n        todos={todos}\n        deleteTodo={deleteTodo}\n        completeTodo={completeTodo}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n// import App from \"./App\";\nimport App from \"./App\";\nimport \"./App.css\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}